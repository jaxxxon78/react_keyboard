{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","undefined","keyUpFunction","event","setState","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAEaA,EAAb,4MACEC,MAAQ,CACNC,SAAKC,GAFT,EAaEC,cAAgB,SAACC,GACf,EAAKC,SAAS,CAAEJ,IAAKG,EAAMH,OAd/B,uDAKE,WACEK,SAASC,iBAAiB,QAASC,KAAKL,iBAN5C,kCASE,WACEG,SAASG,oBAAoB,QAASD,KAAKL,iBAV/C,oBAiBE,WACE,IACEF,EACEO,KAAKR,MADPC,IAGF,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGT,EAAG,mCAC4BA,EAD5B,KAEA,8BA3Bd,GAAyBU,IAAMC,W,MCG/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.2e80349c.chunk.js","sourcesContent":["import React from 'react';\n\nexport class App extends React.Component {\n  state = {\n    key: undefined,\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.keyUpFunction);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.keyUpFunction);\n  }\n\n  keyUpFunction = (event: KeyboardEvent) => {\n    this.setState({ key: event.key });\n  };\n\n  render() {\n    const {\n      key,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {key\n            ? `The last pressed key is [${key}]`\n            : 'Nothing was pressed'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}